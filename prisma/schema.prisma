generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model company {
  id             String   @id @db.VarChar(255) @default(uuid())
  name           String   @db.VarChar(100)
  overview       String   @db.Text
  employee_count Int
  logo           String   @db.VarChar(255)
  password       String   @db.VarChar(255)
  created_at     DateTime @default(now()) @db.DateTime(0)
  job            job[]
}

model education {
  id               String        @id @db.VarChar(255) @default(uuid())
  field_of_study   String        @db.VarChar(100)
  qualification_id String        @db.VarChar(255)
  institution      String        @db.VarChar(255)
  user_id          String        @db.VarChar(255)
  start_date       DateTime      @db.Date
  end_date         DateTime      @db.Date
  created_at       DateTime      @default(now()) @db.DateTime(0)
  qualification    qualification @relation(fields: [qualification_id], references: [id], onDelete: NoAction, map: "fk_education_qualification")
  user             user          @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "fk_education_user")

  @@index([qualification_id], map: "fk_education_qualification")
  @@index([user_id], map: "fk_education_user")
}

model experience {
  id           String    @id @db.VarChar(255) @default(uuid())
  position     String    @db.VarChar(255)
  company_name String    @db.VarChar(100)
  description  String    @db.Text
  start_date   DateTime  @db.Date
  end_date     DateTime? @db.Date
  user_id      String    @db.VarChar(255)
  created_at   DateTime  @default(now()) @db.DateTime(0)
  user         user      @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "fk_experience_user")

  @@index([user_id], map: "fk_experience_user")
}

model job {
  id              Int               @id @default(autoincrement())
  company_id      String            @db.VarChar(255)
  position        String            @db.VarChar(255)
  min_salary      Float             @db.Float
  max_salary      Float             @db.Float
  information     String            @db.Text
  start_date      DateTime          @db.Date
  end_date        DateTime          @db.Date
  location        String            @db.VarChar(255)
  work_mode       String            @db.VarChar(100)
  employee_type   String            @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.DateTime(0)
  company         company           @relation(fields: [company_id], references: [id], onDelete: Cascade, map: "fk_job_company")
  job_application job_application[]

  @@index([company_id], map: "fk_job_company")
}

model job_application {
  id         String   @id @db.VarChar(255) @default(uuid())
  job_id     Int
  user_id    String   @db.VarChar(255)
  resume     String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.DateTime(0)
  job        job      @relation(fields: [job_id], references: [id], onDelete: Cascade, map: "fk_jobapp_job")
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, map: "fk_jobapp_user")

  @@index([job_id], map: "fk_jobapp_job")
  @@index([user_id], map: "fk_jobapp_user")
}

model qualification {
  id                  String      @id @db.VarChar(255) @default(uuid())
  qualification_long  String      @db.VarChar(100)
  qualification_short String      @db.VarChar(25)
  created_at          DateTime    @default(now()) @db.DateTime(0)
  education           education[]
}

model user {
  id              String            @id @db.VarChar(255) @default(uuid())
  name            String            @db.VarChar(100)
  email           String            @db.VarChar(255)
  date_of_birth   DateTime          @db.Date
  gender          String            @db.VarChar(50)
  password        String            @db.VarChar(255)
  bio             String            @db.Text
  profile_image   String            @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.DateTime(0)
  education       education[]
  experience      experience[]
  job_application job_application[]
}
