generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model company {
  id             String   @id @db.VarChar(255) @default(uuid())
  name           String   @db.VarChar(100)
  email          String   @db.VarChar(255) @unique
  overview       String?   @db.Text
  employeeCount Int? @map("employee_count")
  logo           String?   @db.VarChar(255)
  password       String   @db.VarChar(255)
  createdAt     DateTime @default(now()) @db.DateTime(0) @map("created_at")
  job            job[]
}

model education {
  id               String        @id @db.VarChar(255) @default(uuid())
  fieldOfStudy   String        @db.VarChar(100) @map("field_of_study")
  qualificationId String        @db.VarChar(255) @map("qualification_id")
  institution      String        @db.VarChar(255)
  userId          String        @db.VarChar(255) @map("user_id")
  startDate       DateTime      @db.Date @map("start_date")
  endDate         DateTime      @db.Date @map("end_date")
  createdAt       DateTime      @default(now()) @db.DateTime(0) @map("created_at")
  qualification    qualification @relation(fields: [qualificationId], references: [id], onDelete: NoAction, map: "fk_education_qualification")
  user             user          @relation(fields: [userId], references: [id], onDelete: Cascade, map: "fk_education_user")

  @@index([qualificationId], map: "fk_education_qualification")
  @@index([userId], map: "fk_education_user")
}

model experience {
  id           String    @id @db.VarChar(255) @default(uuid())
  position     String    @db.VarChar(255)
  companyName String    @db.VarChar(100) @map("company_name")
  description  String    @db.Text
  startDate   DateTime  @db.Date @map("start_date")
  endDate     DateTime? @db.Date @map("end_date")
  userId      String    @db.VarChar(255) @map("user_id")
  created_at   DateTime  @default(now()) @db.DateTime(0)
  user         user      @relation(fields: [userId], references: [id], onDelete: Cascade, map: "fk_experience_user")

  @@index([userId], map: "fk_experience_user")
}

model job {
  id              Int               @id @default(autoincrement())
  companyId      String            @db.VarChar(255) @map("company_id")
  position        String            @db.VarChar(255)
  minSalary      Float             @db.Float @map("min_salary")
  maxSalary      Float             @db.Float @map("max_salary")
  information     String            @db.Text
  startDate      DateTime          @db.Date @map("start_date")
  endDate        DateTime          @db.Date @map("end_date")
  location        String            @db.VarChar(255)
  workMode       String            @db.VarChar(100) @map("work_mode")
  employeeType   String            @db.VarChar(255) @map("employee_type")
  createdAt      DateTime          @default(now()) @db.DateTime(0) @map("created_at")
  company         company           @relation(fields: [companyId], references: [id], onDelete: Cascade, map: "fk_job_company")
  job_application job_application[]

  @@index([companyId], map: "fk_job_company")
}

model job_application {
  id         String   @id @db.VarChar(255) @default(uuid())
  jobId     Int @map("job_id")
  userId    String   @db.VarChar(255) @map("user_id")
  resume     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.DateTime(0) @map("created_at")
  job        job      @relation(fields: [jobId], references: [id], onDelete: Cascade, map: "fk_jobapp_job")
  user       user     @relation(fields: [userId], references: [id], onDelete: NoAction, map: "fk_jobapp_user")

  @@index([jobId], map: "fk_jobapp_job")
  @@index([userId], map: "fk_jobapp_user")
}

model qualification {
  id                  String      @id @db.VarChar(255) @default(uuid())
  qualificationLong  String      @db.VarChar(100) @map("qualification_long")
  qualificationShort String      @db.VarChar(25) @map("qualification_short")
  created_at          DateTime    @default(now()) @db.DateTime(0)
  education           education[]
}

model user {
  id              String            @id @db.VarChar(255) @default(uuid())
  name            String            @db.VarChar(100)
  email           String            @db.VarChar(255) @unique
  dateOfBirth   DateTime          @db.Date @map("date_of_birth")
  gender          String            @db.VarChar(50)
  password        String            @db.VarChar(255)
  bio             String?            @db.Text 
  profileImage   String?            @db.VarChar(255) @map("profile_image")
  createdAt      DateTime          @default(now()) @db.DateTime(0) @map("created_at")
  education       education[]
  experience      experience[]
  job_application job_application[]
}

